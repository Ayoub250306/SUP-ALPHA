console.log('Script charg√©');

// API Constants
const ADZUNA_APP_ID = 'ede76ec8';
const ADZUNA_API_KEY = '66b38453355e158dacffeea6e09b7108';
const ADZUNA_BASE_URL = 'https://api.adzuna.com/v1/api/jobs/fr/search/1';

// UI Control Functions
function toggleDropdown() {
    const dropdown = document.getElementById("menuDropdown");
    dropdown.style.display = dropdown.style.display === "block" ? "none" : "block";
}

function toggleSubDropdown(subDropdownId) {
    var subMenu = document.getElementById(subDropdownId);
    subMenu.classList.toggle("show");
}

function selectOption(option) {
    const input = document.getElementById("messageInput");
    input.value = option;
    
    // Define the responses for each section
    const responses = {
        'D√©veloppement personnel': "SUP'RH met l'accent sur le d√©veloppement des comp√©tences personnelles √† travers des programmes de Soft Skills et des activit√©s d√©di√©es, comme le Club Rotaract et des formations sur les nouvelles technologies.",
        'Partenariats internationaux': "SUP'RH propose plusieurs programmes internationaux avec des institutions comme YSchools, UQAM, et des universit√©s aux √âtats-Unis, permettant une ouverture sur le monde et des opportunit√©s d'√©tudes √† l'international.",
        'Insertion professionnelle': "Le taux d'insertion des dipl√¥m√©s de SUP'RH est √©lev√©, avec des partenariats solides avec des entreprises locales et internationales. Les √©tudiants b√©n√©ficient de stages en entreprise et d'√©v√©nements comme le Forum de recrutement.",
        'Vie √©tudiante': "SUP'RH offre une vie √©tudiante dynamique avec des √©v√©nements comme le 'Friday Couscous & Friends', des clubs artistiques, et un campus √©quip√© de technologies modernes.",
        'Programmes acad√©miques': "SUP'RH propose une vari√©t√© de programmes de Bac+3 √† Bac+5 dans des domaines comme le marketing digital, la gestion des ressources humaines et l'intelligence artificielle, avec des formations √† la fois locales et internationales."
    };

    // Show the user's selection in the chat
    appendMessage(option, 'user');

    // If we have a predefined response for this option, use it
    if (responses[option]) {
        appendMessage(responses[option], 'bot');
    } else if (option.toLowerCase().includes('stage')) {
        fetchInternships();
    } else {
        // For other queries, use the AI
        generateText(option);
    }

    // Clear the input and close the dropdown
    input.value = "";
    const dropdown = document.getElementById("menuDropdown");
    dropdown.style.display = "none";
}

// Message Handling
function sendMessage() {
    const input = document.getElementById("messageInput");
    const message = input.value.trim();
    if (message === "") return;

    appendMessage(message, 'user');
    input.value = "";

    if (message.toLowerCase().includes("stage")) {
        fetchInternships();
    } else if (message.toLowerCase().includes("section")) {
        generateText(message);
    } else {
        generateText(message);
    }
}

function appendMessage(message, sender) {
    const chatMessages = document.getElementById("chatMessages");
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${sender}`;
    messageDiv.textContent = message;
    chatMessages.appendChild(messageDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

// Fonction pour r√©cup√©rer les offres de stage
async function fetchInternships() {
    try {
        const response = await fetch(`${ADZUNA_BASE_URL}?app_id=${ADZUNA_APP_ID}&app_key=${ADZUNA_API_KEY}&results_per_page=5&what=stage`);
        const data = await response.json();
        displayInternships(data);
    } catch (error) {
        appendMessage("Une erreur s'est produite lors de la r√©cup√©ration des offres de stage.", 'bot');
        console.error('Erreur API:', error);
    }
}

function displayInternships(data) {
    const chatMessages = document.getElementById("chatMessages");
    const messageDiv = document.createElement('div');
    messageDiv.className = 'message bot';

    if (!data.results || data.results.length === 0) {
        messageDiv.innerHTML = `<p>Aucune offre de stage trouv√©e.</p>`;
        chatMessages.appendChild(messageDiv);
        chatMessages.scrollTop = chatMessages.scrollHeight;
        return;
    }

    let messageContent = `<div class="internship-listings">
        <h3>üì¢ Offres de stage disponibles :</h3><br>`;

    data.results.forEach((job, index) => {
        messageContent += `
        <div class="internship-item">
            <h4>üîπ ${index + 1}. ${job.title}</h4>
            <p>üè¢ <strong>Entreprise :</strong> ${job.company?.display_name || "Non pr√©cis√©"}</p>
            <p>üìç <strong>Lieu :</strong> ${job.location?.display_name || "Non pr√©cis√©"}</p>
            <p>üìÖ <strong>Date :</strong> ${new Date(job.created).toLocaleDateString()}</p>
            <p>üí∞ <strong>Salaire :</strong> ${job.salary_is_predicted == 1 ? "Estimation disponible" : "Non pr√©cis√©"}</p>
            <p>üìú <strong>Description :</strong> ${job.description.substring(0, 150)}...</p>
            <a href="${job.redirect_url}" target="_blank" class="info-button">üîó Voir l'offre</a>
        </div>
        <br>`;
    });

    messageContent += '</div>';
    messageDiv.innerHTML = messageContent;
    chatMessages.appendChild(messageDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

// IA Interaction Functions
const aiButton = document.getElementById("aiButton");
const messageInput = document.getElementById("messageInput");

aiButton.addEventListener('click', () => {
    if (messageInput.value.trim() !== "") {
        sendMessage();
    } else {
        messageInput.focus();
    }
});

// Fonction pour g√©n√©rer la r√©ponse de l'IA
async function generateText(prompt) {
    try {
        // Only use AI for non-predefined queries
        const response = await fetch(
            'https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.3',
            {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer 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`,
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ inputs: prompt })
            }
        );

        const data = await response.json();

        if (data && data.length > 0 && data[0].generated_text) {
            appendMessage(data[0].generated_text, 'bot');
        } else {
            appendMessage("D√©sol√©, je n'ai pas pu g√©n√©rer une r√©ponse.", 'bot');
        }
    } catch (error) {
        appendMessage("Une erreur s'est produite lors de la g√©n√©ration de la r√©ponse.", 'bot');
        console.error('Erreur IA:', error);
    }
}

// Initialisation du chatbot
window.onload = function() {
    appendMessage("Bonjour! Je suis Sup'Alpha. Comment puis-je vous aider?", 'bot');
};
